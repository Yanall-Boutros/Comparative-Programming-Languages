head	1.3;
access;
symbols;
locks;
comment	@; @;


1.3
date	2020.01.24.20.57.06;	author -;	state -;
branches;
next	1.2;

1.2
date	2020.01.24.20.52.31;	author -;	state -;
branches;
next	1.1;

1.1
date	2019.01.24.23.47.38;	author -;	state -;
branches;
next	;


desc
@@


1.3
log
@-
@
text
@(* $Id: main.ml,v 1.2 2020-01-24 12:52:31-08 - - $ *)

(*
* Main program reads a file and prints to stdout.
*)

let interpret_source filename =
    try (let sourcefile =
             if filename = "-"
             then stdin
             else open_in filename in
         let lexbuf = Lexing.from_channel sourcefile in
         let abstract_syntax = Parser.program Scanner.token lexbuf in
         Interp.interpret_program abstract_syntax)
    with Sys_error (string) -> Etc.die [string]

let _ = if !Sys.interactive
        then ()
        else match Array.length Sys.argv with
             | 1 -> interpret_source "-"
             | 2 -> interpret_source Sys.argv.(1)
             | _ -> Etc.usage_exit ["[filename.sb]"]

@


1.2
log
@-
@
text
@d1 1
a1 1
(* $Id: main.ml,v 1.1 2019-01-24 15:47:38-08 - - $ *)
d15 1
a15 2
    with | Sys_error (string) -> Etc.die [string]
         | Interp.Unimplemented (string) -> Etc.die [string]
@


1.1
log
@-
@
text
@d1 1
a1 1
(* $Id: main.ml,v 1.1 2019-01-18 11:49:38-08 - - $ *)
d15 2
a16 1
    with Sys_error (string) -> Etc.die [string]
@
