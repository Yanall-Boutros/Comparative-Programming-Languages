head	1.2;
access;
symbols;
locks;
comment	@# @;


1.2
date	2019.10.31.20.49.46;	author -;	state -;
branches;
next	1.1;

1.1
date	2019.10.31.20.32.24;	author -;	state -;
branches;
next	;


desc
@@


1.2
log
@-
@
text
@#!/usr/bin/perl -w
use strict;
use warnings;
# $Id: lline,v 1.1 2019-10-31 13:32:24-07 - - $
#
# NAME
#    longestline - print the line numbers and lengths of longest lines
#
# SYNOPSIS
#    longestline [filename...]
#

$0 =~ s{.*/}{};
my $EXITCODE = 0;
END{ exit $EXITCODE; }
sub note(@@){ print STDERR "$0: @@_"; };
$SIG{'__WARN__'} = sub{ note @@_; $EXITCODE = 1; };
$SIG{'__DIE__'} = sub{ warn @@_; exit; };

my $ignorelen = -1;
$ignorelen = $1 and shift if @@ARGV and $ARGV[0] =~ m/^-(\d+)$/;

push @@ARGV, "-" unless @@ARGV;

for my $filename (@@ARGV) {
   open my $file, "<$filename" or warn "<$filename: $!" and next;
   my $maxnr = 1;
   my $maxlen = 0;
   my @@lines;
   while (defined (my $line = <$file>)) {
      chomp $line;
      my $linelen = length $line;
      $maxnr = $. and $maxlen = $linelen if $maxlen < $linelen;
      $lines[$.] = $line;
   };
   close $file;
   next if $maxlen <= $ignorelen;
   printf " %7d %7d %s\n", $maxlen, $maxnr, $filename;
   for my $linenr (1..$#lines) {
      printf " %7s %7d %s\n", "", $linenr, $lines[$linenr]
             if (length $lines[$linenr]) >= $maxlen;
   };
};

exit $EXITCODE;

@


1.1
log
@-
@
text
@d1 1
a1 1
#!/usr/local/bin/perl -w
d4 1
a4 1
# $Id: lline,v 1.2 2011-05-26 19:02:03-07 - - $
@
